# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - efficient-webjars
  
pool:
  name: Default
  
steps:
  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'SonarCloudConnection'
      organization: 'jabhishekashok-devops'
      scannerMode: 'Other'
      extraProperties: |
        # Additional properties that will be passed to the scanner,
        # Put one key=value per line, example:
        # sonar.exclusions=**/*.bin
        sonar.projectKey=jabhishekashok-devops_spring-petclinic.git
        sonar.projectName=spring-petclinic.git
  - task: Maven@4
    inputs:
      mavenPomFile: 'pom.xml'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      javaHomeOption: 'Path'
      jdkDirectory: '/usr/lib/jvm/java-17-openjdk-amd64'
      mavenVersionOption: 'Path'
      mavenDirectory: '/opt/maven/apache-maven-3.9.3'
      mavenSetM2Home: false
      mavenAuthenticateFeed: false
      effectivePomSkip: false
      sonarQubeRunAnalysis: false
  
  - task: SonarCloudPublish@1
    inputs:
      pollingTimeoutSec: '300'
  - task: CopyFiles@2
    inputs:
      Contents: '**/spring-petclinic*.jar'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
  
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'spc'
      publishLocation: 'Container'