!function(e){function t(t){for(var n,a,i=t[0],o=t[1],s=0,u=[];s<i.length;s++)a=i[s],Object.prototype.hasOwnProperty.call(r,a)&&r[a]&&u.push(r[a][0]),r[a]=0;for(n in o)Object.prototype.hasOwnProperty.call(o,n)&&(e[n]=o[n]);for(l&&l(t);u.length;)u.shift()()}var n={},r={0:0};function a(t){if(n[t])return n[t].exports;var r=n[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,a),r.l=!0,r.exports}a.e=function(e){var t=[],n=r[e];if(0!==n)if(n)t.push(n[2]);else{var i=new Promise((function(t,a){n=r[e]=[t,a]}));t.push(n[2]=i);var o,s=document.createElement("script");s.charset="utf-8",s.timeout=120,a.nc&&s.setAttribute("nonce",a.nc),s.src=function(e){return a.p+"visTypeGauge.chunk."+e+".js"}(e);var l=new Error;o=function(t){s.onerror=s.onload=null,clearTimeout(u);var n=r[e];if(0!==n){if(n){var a=t&&("load"===t.type?"missing":t.type),i=t&&t.target&&t.target.src;l.message="Loading chunk "+e+" failed.\n("+a+": "+i+")",l.name="ChunkLoadError",l.type=a,l.request=i,n[1](l)}r[e]=void 0}};var u=setTimeout((function(){o({type:"timeout",target:s})}),12e4);s.onerror=s.onload=o,document.head.appendChild(s)}return Promise.all(t)},a.m=e,a.c=n,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)a.d(n,r,function(t){return e[t]}.bind(null,r));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a.oe=function(e){throw console.error(e),e};var i=window.visTypeGauge_bundle_jsonpfunction=window.visTypeGauge_bundle_jsonpfunction||[],o=i.push.bind(i);i.push=t,i=i.slice();for(var s=0;s<i.length;s++)t(i[s]);var l=o;a(a.s=14)}([function(e,t){e.exports=__kbnSharedDeps__.KbnI18n},function(e,t,n){n.r(t);var r=__kbnBundles__.get("plugin/visualizations/public");Object.defineProperties(t,Object.getOwnPropertyDescriptors(r))},function(e,t){e.exports=__kbnSharedDeps__.EmotionReact},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));const r={Automatic:"automatic",Horizontal:"horizontal",Vertical:"vertical"},a={Arc:"Arc",Circle:"Circle"}},function(e,t,n){n.r(t);var r=__kbnBundles__.get("plugin/expressions/public");Object.defineProperties(t,Object.getOwnPropertyDescriptors(r))},function(e,t,n){n.r(t);var r=__kbnBundles__.get("plugin/charts/public");Object.defineProperties(t,Object.getOwnPropertyDescriptors(r))},function(e,t,n){n.r(t);var r=__kbnBundles__.get("plugin/data/public");Object.defineProperties(t,Object.getOwnPropertyDescriptors(r))},function(e,t){e.exports=__kbnSharedDeps__.React},function(e,t){e.exports=__kbnSharedDeps__.Uuid},function(e,t,n){"use strict";n.r(t),n.d(t,"LEGACY_GAUGE_CHARTS_LIBRARY",(function(){return r}));const r="visualization:visualize:legacyGaugeChartsLibrary"},function(e,t){e.exports=__kbnSharedDeps__.KbnI18nReact},function(e,t,n){e.exports=n(16)(3)},function(e,t,n){n.r(t);var r=__kbnBundles__.get("plugin/visualizations/common/utils");Object.defineProperties(t,Object.getOwnPropertyDescriptors(r))},function(e,t,n){n.r(t);var r=__kbnBundles__.get("plugin/kibanaUtils/public");Object.defineProperties(t,Object.getOwnPropertyDescriptors(r))},function(e,t,n){n(15),__kbnBundles__.define("plugin/visTypeGauge/public",n,17),__kbnBundles__.define("plugin/visTypeGauge/common/index",n,9)},function(e,t,n){n.p=window.__kbnPublicPath__.visTypeGauge},function(e,t){e.exports=__kbnSharedDeps_npm__},function(e,t,n){"use strict";n.r(t),n.d(t,"plugin",(function(){return G})),n.d(t,"gaugeVisType",(function(){return S})),n.d(t,"goalVisType",(function(){return k}));var r=n(9),a=n(7),i=n(0),o=n(5),s=n(6),l=n(1),u=n(3),c=n(12),g=n(4);const p=e=>{const t=Object(g.buildExpressionFunction)("visdimension",{accessor:e.accessor});return e.format&&(t.addArgument("format",e.format.id),t.addArgument("formatParams",JSON.stringify(e.format.params))),Object(g.buildExpression)([t])},d=(e,t)=>{var n,r;const a=Object(l.getVisSchemas)(e,t),{gaugeType:i,percentageMode:o,percentageFormatPattern:s,colorSchema:d,colorsRange:m,invertColors:f,scale:b,style:_,labels:v}=e.params.gauge;!0===o&&a.metric.forEach((e=>{e.format={id:"percent",params:{pattern:s}}}));const h=v.show?_.subText?"custom":"auto":"none",y=Object(g.buildExpressionFunction)("gauge",{shape:(O=i,{[u.b.Arc]:"arc",[u.b.Circle]:"circle"}[O]),metric:a.metric.map(p),ticksPosition:b.show?"auto":"hidden",labelMajorMode:"none",colorMode:"palette",centralMajorMode:h,..."custom"===h?{labelMinor:_.subText}:{},percentageMode:o,respectRanges:!0,commonLabel:null===(n=a.metric)||void 0===n||null===(r=n[0])||void 0===r?void 0:r.label});var O;if(m&&m.length){const e=Object(c.getStopsWithColorsFromRanges)(m,d,f),t=Object(g.buildExpressionFunction)("palette",{...e,range:o?"percent":"number",continuity:"none",gradient:!0,rangeMax:o?100:e.stop[e.stop.length-1],rangeMin:e.stop[0]});y.addArgument("palette",Object(g.buildExpression)([t]))}return Object(g.buildExpression)([y]).toAst()};var m=n(11),f=n.n(m),b=n(2);const _=Object(a.lazy)((()=>n.e(3).then(n.bind(null,22)))),v=({showElasticChartsOptions:e})=>t=>Object(b.jsx)(_,f()({},t,{showElasticChartsOptions:e}));var h=n(10);function y(){return Object(b.jsx)(h.FormattedMessage,{id:"visTypeGauge.splitTitle.tooltip",defaultMessage:"Split chart aggregation is not yet supported with the new charts library. Please, enable the gauge legacy charts library advanced setting to use split chart aggregation."})}var O=n(8),T=n(13);const[x,w]=Object(T.createGetterSetter)("dataViews"),j=e=>{if((e=>!!e.meta)(e)){const{meta:t,...n}=e;return n}return e},P=async(e,t)=>{var r;if(!t)return null;const a=x(),i=await Object(l.getDataViewByIndexPatternId)(null===(r=e.data.indexPattern)||void 0===r?void 0:r.id,a);if(!i)return null;const[{getColumnsFromVis:o,createStaticValueColumn:s,getPalette:u,getPercentageModeConfig:c},{getConfiguration:g}]=await Promise.all([l.convertToLensModule,n.e(1).then(n.bind(null,20))]),p=c(e.params.gauge,!1),d=o(e,t,i,{unsupported:["group"]},{dropEmptyRowsInDateHistogram:!0,...p});if(null===d)return null;const[m]=d;if(m.metrics.length>1||m.buckets.all.length)return null;if(m.metrics[0]){const e=m.columns.find((({columnId:e})=>e===m.metrics[0]));if("number"!==(null==e?void 0:e.dataType))return null}const f=Object(O.v4)(),b=i.id,_=m.metrics[0],{min:v,max:h,isPercentageMode:y}=p,T=s(y?0:v),w=s(y?1:h);return{type:"lnsGauge",layers:[{indexPatternId:b,layerId:f,columns:[...m.columns,T,w].map(j),columnOrder:[]}],configuration:g(f,e.params,u(e.params.gauge,p,!0),{metricAccessor:_,minAccessor:T.columnId,maxAccessor:w.columnId}),indexPatternIds:[b]}},C=e=>{if((e=>!!e.meta)(e)){const{meta:t,...n}=e;return n}return e},M=async(e,t)=>{var r;if(!t)return null;const a=x(),i=await Object(l.getDataViewByIndexPatternId)(null===(r=e.data.indexPattern)||void 0===r?void 0:r.id,a);if(!i)return null;const[{getColumnsFromVis:o,getPalette:s,getPercentageModeConfig:u,createStaticValueColumn:c},{getConfiguration:g}]=await Promise.all([l.convertToLensModule,n.e(2).then(n.bind(null,21))]),p=u(e.params.gauge,!1),d=o(e,t,i,{splits:["group"]},{dropEmptyRowsInDateHistogram:!0,...p});if(null===d)return null;const[m]=d;if(m.metrics.length>1||m.buckets.all.length>1)return null;if(m.metrics[0]){const e=m.columns.find((({columnId:e})=>e===m.metrics[0]));if("number"!==(null==e?void 0:e.dataType))return null}const{isPercentageMode:f,max:b}=p,_=c(f?1:b),v=[...m.columns,_],h=Object(O.v4)(),y=i.id;return{type:"lnsMetric",layers:[{indexPatternId:y,layerId:h,columns:v.map(C),columnOrder:[]}],configuration:g(h,e.params,s(e.params.gauge,p,!0),{...m,maxAccessor:_.columnId}),indexPatternIds:[y]}},S=e=>(e=>({name:"gauge",title:i.i18n.translate("visTypeGauge.gauge.gaugeTitle",{defaultMessage:"Gauge"}),icon:"visGauge",description:i.i18n.translate("visTypeGauge.gauge.gaugeDescription",{defaultMessage:"Show the status of a metric."}),getSupportedTriggers:()=>[l.VIS_EVENT_TO_TRIGGER.filter],fetchDatatable:!0,toExpressionAst:d,visConfig:{defaults:{type:"gauge",addTooltip:!0,addLegend:!0,isDisplayWarning:!1,gauge:{alignment:u.a.Automatic,extendRange:!0,percentageMode:!1,gaugeType:u.b.Arc,gaugeStyle:"Full",backStyle:"Full",orientation:"vertical",colorSchema:o.ColorSchemas.GreenToRed,gaugeColorMode:o.ColorMode.Labels,colorsRange:[{from:0,to:50},{from:50,to:75},{from:75,to:100}],invertColors:!1,labels:{show:!0,color:"black"},scale:{show:!0,labels:!1,color:"rgba(105,112,125,0.2)"},type:"meter",style:{bgWidth:.9,width:.9,mask:!1,bgMask:!1,maskBars:50,bgFill:"rgba(105,112,125,0.2)",bgColor:!0,subText:"",fontSize:60}}}},editorConfig:{enableDataViewChange:!0,optionsTemplate:v(e),schemas:[{group:s.AggGroupNames.Metrics,name:"metric",title:i.i18n.translate("visTypeGauge.gauge.metricTitle",{defaultMessage:"Metric"}),min:1,...e.showElasticChartsOptions?{max:1}:{},aggFilter:["!std_dev","!geo_centroid","!percentiles","!percentile_ranks","!derivative","!serial_diff","!moving_avg","!cumulative_sum","!geo_bounds","!filtered_metric","!single_percentile","!single_percentile_rank"],defaults:[{schema:"metric",type:"count"}]},{group:s.AggGroupNames.Buckets,name:"group",...e.showElasticChartsOptions&&{disabled:!0,tooltip:Object(b.jsx)(y,null)},title:i.i18n.translate("visTypeGauge.gauge.groupTitle",{defaultMessage:"Split group"}),min:0,max:1,aggFilter:["!geohash_grid","!geotile_grid","!filter","!sampler","!diversified_sampler","!rare_terms","!multi_terms","!significant_text"]}]},requiresSearch:!0,navigateToLens:async(e,t)=>e?P(e,t):null,getExpressionVariables:async(e,t)=>({canNavigateToLens:Boolean(null!=e&&e.params?await P(e,t):null)})}))(e),k=e=>(e=>({name:"goal",title:i.i18n.translate("visTypeGauge.goal.goalTitle",{defaultMessage:"Goal"}),icon:"visGoal",description:i.i18n.translate("visTypeGauge.goal.goalDescription",{defaultMessage:"Track how a metric progresses to a goal."}),fetchDatatable:!0,toExpressionAst:d,visConfig:{defaults:{addTooltip:!0,addLegend:!1,isDisplayWarning:!1,type:"goal",gauge:{verticalSplit:!1,autoExtend:!1,percentageMode:!0,gaugeType:u.b.Arc,gaugeStyle:"Full",backStyle:"Full",orientation:"vertical",useRanges:!1,colorSchema:o.ColorSchemas.GreenToRed,gaugeColorMode:o.ColorMode.None,colorsRange:[{from:0,to:1e4}],invertColors:!1,labels:{show:!0,color:"black"},scale:{show:!1,labels:!1,color:"rgba(105,112,125,0.2)",width:2},type:"meter",style:{bgFill:"rgba(105,112,125,0.2)",bgColor:!1,labelColor:!1,subText:"",fontSize:60}}}},editorConfig:{enableDataViewChange:!0,optionsTemplate:v(e),schemas:[{group:s.AggGroupNames.Metrics,name:"metric",title:i.i18n.translate("visTypeGauge.goal.metricTitle",{defaultMessage:"Metric"}),min:1,...e.showElasticChartsOptions?{max:1}:{},aggFilter:["!std_dev","!geo_centroid","!percentiles","!percentile_ranks","!derivative","!serial_diff","!moving_avg","!cumulative_sum","!geo_bounds","!filtered_metric","!single_percentile","!single_percentile_rank"],defaults:[{schema:"metric",type:"count"}]},{group:s.AggGroupNames.Buckets,name:"group",...e.showElasticChartsOptions&&{disabled:!0,tooltip:Object(b.jsx)(y,null)},title:i.i18n.translate("visTypeGauge.goal.groupTitle",{defaultMessage:"Split group"}),min:0,max:1,aggFilter:["!geohash_grid","!geotile_grid","!filter","!sampler","!diversified_sampler","!rare_terms","!multi_terms","!significant_text"]}]},requiresSearch:!0,navigateToLens:async(e,t)=>e?M(e,t):null,getExpressionVariables:async(e,t)=>({canNavigateToLens:Boolean(null!=e&&e.params?await M(e,t):null)})}))(e);class plugin_VisTypeGaugePlugin{setup(e,{visualizations:t}){if(!e.uiSettings.get(r.LEGACY_GAUGE_CHARTS_LIBRARY)){const e={showElasticChartsOptions:!0};t.createBaseVisualization(S(e)),t.createBaseVisualization(k(e))}return{}}start(e,{dataViews:t}){w(t)}}function G(){return new plugin_VisTypeGaugePlugin}},function(e,t){e.exports=__kbnSharedDeps__.ElasticEui},function(e,t,n){n.r(t);var r=__kbnBundles__.get("plugin/visDefaultEditor/public");Object.defineProperties(t,Object.getOwnPropertyDescriptors(r))}]);