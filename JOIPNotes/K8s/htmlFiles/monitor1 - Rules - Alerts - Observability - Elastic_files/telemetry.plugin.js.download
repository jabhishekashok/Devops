!function(e){function t(t){for(var n,i,r=t[0],o=t[1],a=0,h=[];a<r.length;a++)i=r[a],Object.prototype.hasOwnProperty.call(s,i)&&s[i]&&h.push(s[i][0]),s[i]=0;for(n in o)Object.prototype.hasOwnProperty.call(o,n)&&(e[n]=o[n]);for(c&&c(t);h.length;)h.shift()()}var n={},s={0:0};function i(t){if(n[t])return n[t].exports;var s=n[t]={i:t,l:!1,exports:{}};return e[t].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.e=function(e){var t=[],n=s[e];if(0!==n)if(n)t.push(n[2]);else{var r=new Promise((function(t,i){n=s[e]=[t,i]}));t.push(n[2]=r);var o,a=document.createElement("script");a.charset="utf-8",a.timeout=120,i.nc&&a.setAttribute("nonce",i.nc),a.src=function(e){return i.p+"telemetry.chunk."+e+".js"}(e);var c=new Error;o=function(t){a.onerror=a.onload=null,clearTimeout(h);var n=s[e];if(0!==n){if(n){var i=t&&("load"===t.type?"missing":t.type),r=t&&t.target&&t.target.src;c.message="Loading chunk "+e+" failed.\n("+i+": "+r+")",c.name="ChunkLoadError",c.type=i,c.request=r,n[1](c)}s[e]=void 0}};var h=setTimeout((function(){o({type:"timeout",target:a})}),12e4);a.onerror=a.onload=o,document.head.appendChild(a)}return Promise.all(t)},i.m=e,i.c=n,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)i.d(n,s,function(t){return e[t]}.bind(null,s));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i.oe=function(e){throw console.error(e),e};var r=window.telemetry_bundle_jsonpfunction=window.telemetry_bundle_jsonpfunction||[],o=r.push.bind(r);r.push=t,r=r.slice();for(var a=0;a<r.length;a++)t(r[a]);var c=o;i(i.s=12)}([function(e,t,n){e.exports=n(8)(2)},function(e,t){e.exports=__kbnSharedDeps__.Rxjs},function(e,t,n){"use strict";n.r(t),n.d(t,"REPORT_INTERVAL_MS",(function(){return s})),n.d(t,"REPORT_INTERVAL_BUFFER_MS",(function(){return i})),n.d(t,"OPT_IN_POLL_INTERVAL_MS",(function(){return r})),n.d(t,"LOCALSTORAGE_KEY",(function(){return o})),n.d(t,"PATH_TO_ADVANCED_SETTINGS",(function(){return a})),n.d(t,"PAYLOAD_CONTENT_ENCODING",(function(){return c})),n.d(t,"ENDPOINT_VERSION",(function(){return h})),n.d(t,"ENDPOINT_STAGING",(function(){return l})),n.d(t,"ENDPOINT_PROD",(function(){return u})),n.d(t,"TELEMETRY_CHANNELS",(function(){return d}));const s=864e5,i=12e4,r=1e4,o="telemetry.data",a="/app/management/kibana/settings",c="aes256gcm",h="v2",l="https://telemetry-staging.elastic.co/",u="https://telemetry.elastic.co/",d={SNAPSHOT_CHANNEL:"xpack",OPT_IN_STATUS_CHANNEL:"opt_in_status"}},function(e,t){e.exports=__kbnSharedDeps__.EmotionReact},function(e,t){e.exports=__kbnSharedDeps__.React},function(e,t){e.exports=__kbnSharedDeps__.KbnI18n},function(e,t){e.exports=__kbnSharedDeps__.ElasticEui},function(e,t,n){n.r(t);var s=__kbnBundles__.get("plugin/kibanaReact/public");Object.defineProperties(t,Object.getOwnPropertyDescriptors(s))},function(e,t){e.exports=__kbnSharedDeps_npm__},function(e,t){e.exports=__kbnSharedDeps__.RxjsOperators},function(e,t,n){n.r(t);var s=__kbnBundles__.get("plugin/kibanaUtils/public");Object.defineProperties(t,Object.getOwnPropertyDescriptors(s))},function(e,t,n){e.exports=n(8)(3)},function(e,t,n){n(13),__kbnBundles__.define("plugin/telemetry/public",n,14),__kbnBundles__.define("plugin/telemetry/common/constants",n,2)},function(e,t,n){n.p=window.__kbnPublicPath__.telemetry},function(e,t,n){"use strict";n.r(t),n.d(t,"plugin",(function(){return C}));var s=n(0),i=n.n(s),r=n(1);class ErrorWithCode extends Error{constructor(e,t){super(e),this.code=t}}function o(e){return`${e.map((e=>JSON.stringify(e))).join("\n")}\n`}class browser_shipper_ElasticV3BrowserShipper{constructor(e,t){var n,s,o;i()(this,"telemetryCounter$",new r.Subject),i()(this,"reportTelemetryCounters",(s=this.telemetryCounter$,o=browser_shipper_ElasticV3BrowserShipper.shipperName,(e,{type:t,code:n,error:i}={})=>{const r=function(e){return e.reduce(((e,t)=>(e[t.event_type]?e[t.event_type]+=1:e[t.event_type]=1,e)),{})}(e);Object.entries(r).forEach((([e,r])=>{var a;s.next({source:o,type:null!=t?t:i?"failed":"succeeded",code:null!==(a=null!=n?n:null==i?void 0:i.message)&&void 0!==a?a:"OK",count:r,event_type:e})}))})),i()(this,"url",void 0),i()(this,"internalQueue$",new r.Subject),i()(this,"flush$",new r.Subject),i()(this,"queueFlushed$",new r.Subject),i()(this,"isOptedIn$",new r.BehaviorSubject(void 0)),i()(this,"clusterUuid","UNKNOWN"),i()(this,"licenseId",void 0),this.options=e,this.initContext=t,this.setUpInternalQueueSubscriber(),this.url=function(e){const{sendTo:t,channelName:n}=e;return`${"production"===t?"https://telemetry.elastic.co":"https://telemetry-staging.elastic.co"}/v3/send/${n}`}({sendTo:null!==(n=e.sendTo)&&void 0!==n?n:t.sendTo,channelName:e.channelName})}extendContext(e){e.cluster_uuid&&(this.clusterUuid=e.cluster_uuid),e.license_id&&(this.licenseId=e.license_id)}optIn(e){this.isOptedIn$.next(e)}reportEvents(e){e.forEach((e=>{this.internalQueue$.next(e)}))}async flush(){if(this.flush$.isStopped)return;const e=Object(r.firstValueFrom)(this.queueFlushed$);this.flush$.next(),await e}shutdown(){this.internalQueue$.complete(),this.flush$.complete()}setUpInternalQueueSubscriber(){this.internalQueue$.pipe(Object(r.bufferWhen)((()=>Object(r.merge)(this.flush$,Object(r.interval)(1e3).pipe(Object(r.skipWhile)((()=>void 0===this.isOptedIn$.value)))))),Object(r.concatMap)((async e=>{!0===this.isOptedIn$.value&&e.length>0&&await this.sendEvents(e)})),Object(r.map)((()=>this.queueFlushed$.next()))).subscribe()}async sendEvents(e){try{const t=await this.makeRequest(e);this.reportTelemetryCounters(e,{code:t})}catch(t){this.reportTelemetryCounters(e,{code:t.code,error:t})}}async makeRequest(e){const t=await fetch(this.url,{method:"POST",body:o(e),headers:(n=this.clusterUuid,s=this.options.version,i=this.licenseId,{"content-type":"application/x-ndjson","x-elastic-cluster-id":n,"x-elastic-stack-version":s,...i&&{"x-elastic-license-id":i}}),...this.options.debug&&{query:{debug:!0}},keepalive:!0});var n,s,i;if(this.options.debug&&this.initContext.logger.debug(`[${browser_shipper_ElasticV3BrowserShipper.shipperName}]: ${t.status} - ${await t.text()}`),!t.ok)throw new ErrorWithCode(`${t.status} - ${await t.text()}`,`${t.status}`);return`${t.status}`}}i()(browser_shipper_ElasticV3BrowserShipper,"shipperName","elastic_v3_browser");var a=n(9),c=n(10),h=n(2);function l(e){return!e||isNaN(e)||Date.now()-e>h.REPORT_INTERVAL_MS-h.REPORT_INTERVAL_BUFFER_MS}class telemetry_sender_TelemetrySender{static getRetryDelay(e){return 1e3*Math.min(Math.pow(2,e),64)*60}constructor(e,t){i()(this,"lastReported",void 0),i()(this,"storage",void 0),i()(this,"sendIfDue$",void 0),i()(this,"retryCount",0),i()(this,"updateLastReported",(e=>{this.lastReported=e,this.storage.set(h.LOCALSTORAGE_KEY,{lastReport:`${this.lastReported}`})})),i()(this,"isReportDue",(async()=>{if(!l(this.lastReported))return!1;const e=await this.telemetryService.fetchLastReported();return e&&this.updateLastReported(e),l(e)})),i()(this,"isActiveWindow",(()=>document.hasFocus())),i()(this,"shouldSendReport",(async()=>!!(this.isActiveWindow()&&this.telemetryService.canSendTelemetry()&&await this.isReportDue())&&(await this.refreshConfig(),this.telemetryService.canSendTelemetry()))),i()(this,"sendIfDue",(async()=>{await this.shouldSendReport()&&(this.updateLastReported(Date.now()),this.retryCount=0,await this.sendUsageData())})),i()(this,"sendUsageData",(async()=>{try{const e=this.telemetryService.getTelemetryUrl(),t=await this.telemetryService.fetchTelemetry();await Promise.all(t.map((async({clusterUuid:t,stats:n})=>await fetch(e,{method:"POST",headers:{"Content-Type":"application/json","X-Elastic-Stack-Version":this.telemetryService.currentKibanaVersion,"X-Elastic-Cluster-ID":t,"X-Elastic-Content-Encoding":h.PAYLOAD_CONTENT_ENCODING},body:n})))),await this.telemetryService.updateLastReported().catch((()=>{}))}catch(e){this.retryCount=this.retryCount+1,this.retryCount<20?window.setTimeout(this.sendUsageData,telemetry_sender_TelemetrySender.getRetryDelay(this.retryCount)):console.warn(`TelemetrySender.sendUsageData exceeds number of retry attempts with ${e.message}`)}})),i()(this,"startChecking",(()=>{this.sendIfDue$||(this.sendIfDue$=Object(r.merge)(Object(r.interval)(6e4),Object(r.fromEvent)(window,"focus")).pipe(Object(a.exhaustMap)(this.sendIfDue)).subscribe())})),i()(this,"stop",(()=>{var e;null===(e=this.sendIfDue$)||void 0===e||e.unsubscribe()})),this.telemetryService=e,this.refreshConfig=t,this.storage=new c.Storage(window.localStorage);const n=this.storage.get(h.LOCALSTORAGE_KEY);n&&(this.lastReported=parseInt(n.lastReport,10))}}var u=n(5);function d({channelName:e,env:t}){const n=function(e){switch(e){case"prod":return h.ENDPOINT_PROD;case"staging":return h.ENDPOINT_STAGING;default:throw new Error(`Unknown telemetry endpoint env ${e}.`)}}(t),s=function(e){switch(e){case"snapshot":return h.TELEMETRY_CHANNELS.SNAPSHOT_CHANNEL;case"optInStatus":return h.TELEMETRY_CHANNELS.OPT_IN_STATUS_CHANNEL;default:throw new Error(`Unknown telemetry channel ${e}.`)}}(e);return`${n}${s}/${h.ENDPOINT_VERSION}/send`}class telemetry_service_TelemetryService{constructor({config:e,http:t,isScreenshotMode:n,notifications:s,currentKibanaVersion:r,reportOptInStatusChange:o=!0}){i()(this,"http",void 0),i()(this,"reportOptInStatusChange",void 0),i()(this,"notifications",void 0),i()(this,"defaultConfig",void 0),i()(this,"isScreenshotMode",void 0),i()(this,"updatedConfig",void 0),i()(this,"currentKibanaVersion",void 0),i()(this,"getCanChangeOptInStatus",(()=>this.config.allowChangingOptInStatus)),i()(this,"getOptInStatusUrl",(()=>{const{sendUsageTo:e}=this.config;return d({channelName:"optInStatus",env:e})})),i()(this,"getTelemetryUrl",(()=>{const{sendUsageTo:e}=this.config;return d({channelName:"snapshot",env:e})})),i()(this,"getIsOptedIn",(()=>this.isOptedIn)),i()(this,"canSendTelemetry",(()=>!this.isScreenshotMode&&this.getIsOptedIn())),i()(this,"fetchLastReported",(async()=>{const e=await this.http.get("/api/telemetry/v2/last_reported");return null==e?void 0:e.lastReported})),i()(this,"updateLastReported",(async()=>this.http.put("/api/telemetry/v2/last_reported"))),i()(this,"fetchExample",(async()=>await this.fetchTelemetry({unencrypted:!0,refreshCache:!0}))),i()(this,"fetchTelemetry",(async({unencrypted:e=!1,refreshCache:t=!1}={})=>this.http.post("/api/telemetry/v2/clusters/_stats",{body:JSON.stringify({unencrypted:e,refreshCache:t})}))),i()(this,"setOptIn",(async e=>{if(!this.getCanChangeOptInStatus())return!1;try{const t=await this.http.post("/api/telemetry/v2/optIn",{body:JSON.stringify({enabled:e})});this.reportOptInStatusChange&&await this.reportOptInStatus(t),this.isOptedIn=e}catch(e){return this.notifications.toasts.addError(e,{title:u.i18n.translate("telemetry.optInErrorToastTitle",{defaultMessage:"Error"}),toastMessage:u.i18n.translate("telemetry.optInErrorToastText",{defaultMessage:"An error occurred while trying to set the usage statistics preference."})}),!1}return!0})),i()(this,"setUserHasSeenNotice",(async()=>{try{await this.http.put("/api/telemetry/v2/userHasSeenNotice"),this.userHasSeenOptedInNotice=!0}catch(e){this.notifications.toasts.addError(e,{title:u.i18n.translate("telemetry.optInNoticeSeenErrorTitle",{defaultMessage:"Error"}),toastMessage:u.i18n.translate("telemetry.optInNoticeSeenErrorToastText",{defaultMessage:"An error occurred dismissing the notice"})}),this.userHasSeenOptedInNotice=!1}})),i()(this,"reportOptInStatus",(async e=>{const t=this.getOptInStatusUrl();try{await Promise.all(e.map((async({clusterUuid:e,stats:n})=>await fetch(t,{method:"POST",headers:{"Content-Type":"application/json","X-Elastic-Stack-Version":this.currentKibanaVersion,"X-Elastic-Cluster-ID":e,"X-Elastic-Content-Encoding":h.PAYLOAD_CONTENT_ENCODING},body:n}))))}catch(e){}})),this.defaultConfig=e,this.isScreenshotMode=n,this.reportOptInStatusChange=o,this.notifications=s,this.currentKibanaVersion=r,this.http=t}set config(e){this.updatedConfig=e}get config(){return{...this.defaultConfig,...this.updatedConfig}}get isOptedIn(){return Boolean(this.config.optIn)}set isOptedIn(e){this.config={...this.config,optIn:e}}get userHasSeenOptedInNotice(){return this.config.telemetryNotifyUserAboutOptInDefault}set userHasSeenOptedInNotice(e){this.config={...this.config,telemetryNotifyUserAboutOptInDefault:e}}getUserShouldSeeOptInNotice(){var e;return null!==(e=!this.config.hidePrivacyStatement&&this.config.telemetryNotifyUserAboutOptInDefault&&this.config.userCanChangeSettings)&&void 0!==e&&e}get userCanChangeSettings(){var e;return null!==(e=this.config.userCanChangeSettings)&&void 0!==e&&e}set userCanChangeSettings(e){this.config={...this.config,userCanChangeSettings:e}}}var p=n(4),y=n.n(p),f=n(7),m=n(6),g=n(3),S={name:"1azakc",styles:"text-align:center"};const v=()=>{const e=S;return Object(g.jsx)("div",{css:e},Object(g.jsx)(m.EuiLoadingSpinner,null))};var O=n(11),I=n.n(O);const b=(e,t=Object(g.jsx)(v,null))=>y.a.forwardRef(((n,s)=>Object(g.jsx)(m.EuiErrorBoundary,null,Object(g.jsx)(p.Suspense,{fallback:t},Object(g.jsx)(e,I()({},n,{ref:s}))))));class telemetry_notifications_TelemetryNotifications{constructor({http:e,overlays:t,theme:s,telemetryService:r,telemetryConstants:o}){i()(this,"http",void 0),i()(this,"overlays",void 0),i()(this,"theme",void 0),i()(this,"telemetryConstants",void 0),i()(this,"telemetryService",void 0),i()(this,"optedInNoticeBannerId",void 0),i()(this,"optInBannerId",void 0),i()(this,"shouldShowOptedInNoticeBanner",(()=>{const e=this.telemetryService.getUserShouldSeeOptInNotice();return!(void 0!==this.optedInNoticeBannerId)&&e})),i()(this,"renderOptedInNoticeBanner",(()=>{const e=function({onSeen:e,overlays:t,http:s,theme:i,telemetryConstants:r}){const o=b(y.a.lazy((()=>n.e(2).then(n.bind(null,16)).then((({OptedInNoticeBanner:e})=>({default:e})))))),a=Object(f.toMountPoint)(Object(g.jsx)(o,{onSeenBanner:e,http:s,telemetryConstants:r}),{theme$:i.theme$});return t.banners.add(a,1e4)}({http:this.http,onSeen:this.setOptedInNoticeSeen,overlays:this.overlays,theme:this.theme,telemetryConstants:this.telemetryConstants});this.optedInNoticeBannerId=e})),i()(this,"shouldShowOptInBanner",(()=>{const e=this.telemetryService.getIsOptedIn();return!(void 0!==this.optInBannerId)&&null===e})),i()(this,"renderOptInBanner",(()=>{const e=function({setOptIn:e,overlays:t,telemetryConstants:s}){const i=b(y.a.lazy((()=>n.e(1).then(n.bind(null,18)).then((({OptInBanner:e})=>({default:e})))))),r=Object(f.toMountPoint)(Object(g.jsx)(i,{onChangeOptInClick:e,telemetryConstants:s}));return t.banners.add(r,1e4)}({setOptIn:this.onSetOptInClick,overlays:this.overlays,telemetryConstants:this.telemetryConstants});this.optInBannerId=e})),i()(this,"onSetOptInClick",(async e=>{this.optInBannerId&&(this.overlays.banners.remove(this.optInBannerId),this.optInBannerId=void 0),await this.telemetryService.setOptIn(e)})),i()(this,"setOptedInNoticeSeen",(async()=>{this.optedInNoticeBannerId&&(this.overlays.banners.remove(this.optedInNoticeBannerId),this.optedInNoticeBannerId=void 0),await this.telemetryService.setUserHasSeenNotice()})),this.telemetryService=r,this.http=e,this.overlays=t,this.theme=s,this.telemetryConstants=o}}function _(e){return{getPrivacyStatementUrl:()=>e.links.legal.privacyStatement}}class plugin_TelemetryPlugin{constructor(e){i()(this,"currentKibanaVersion",void 0),i()(this,"config",void 0),i()(this,"telemetrySender",void 0),i()(this,"telemetryNotifications",void 0),i()(this,"telemetryService",void 0),i()(this,"canUserChangeSettings",!0),this.currentKibanaVersion=e.env.packageInfo.version,this.config=e.config.get()}setup({analytics:e,http:t,notifications:s,getStartServices:i},{screenshotMode:o,home:a}){const c=this.config,h=this.currentKibanaVersion;let l;return this.telemetryService=new telemetry_service_TelemetryService({config:c,isScreenshotMode:o.isScreenshotMode(),http:t,notifications:s,currentKibanaVersion:h}),i().then((([{docLinks:e}])=>{l=_(e)})),e.registerContextProvider({name:"telemetry labels",context$:Object(r.of)({labels:this.config.labels}),schema:{labels:{type:"pass_through",_meta:{description:"Custom labels added to the telemetry.labels config in the kibana.yml"}}}}),e.registerShipper(browser_shipper_ElasticV3BrowserShipper,{channelName:"kibana-browser",version:h,sendTo:"prod"===c.sendUsageTo?"production":"staging"}),this.telemetrySender=new telemetry_sender_TelemetrySender(this.telemetryService,(async()=>{await this.refreshConfig(t),e.optIn({global:{enabled:this.telemetryService.isOptedIn}})})),a&&!this.config.hidePrivacyStatement&&(a.welcomeScreen.registerOnRendered((()=>{var e,t;null!==(e=this.telemetryService)&&void 0!==e&&e.userCanChangeSettings&&(null===(t=this.telemetryNotifications)||void 0===t||t.setOptedInNoticeSeen())})),a.welcomeScreen.registerTelemetryNoticeRenderer((()=>function(e,t,s){const i=b(y.a.lazy((()=>n.e(3).then(n.bind(null,17)).then((({WelcomeTelemetryNotice:e})=>({default:e}))))));return Object(g.jsx)(i,{telemetryService:e,telemetryConstants:s,addBasePath:t})}(this.telemetryService,t.basePath.prepend,l)))),{telemetryService:this.getTelemetryServicePublicApis()}}start({analytics:e,http:t,overlays:n,theme:s,application:i,docLinks:r}){if(!this.telemetryService)throw Error("Telemetry plugin failed to initialize properly.");this.canUserChangeSettings=this.getCanUserChangeSettings(i),this.telemetryService.userCanChangeSettings=this.canUserChangeSettings;const o=_(r),a=new telemetry_notifications_TelemetryNotifications({http:t,overlays:n,theme:s,telemetryService:this.telemetryService,telemetryConstants:o});return this.telemetryNotifications=a,i.currentAppId$.subscribe((async()=>{if(this.getIsUnauthenticated(t))return;const n=await this.refreshConfig(t);e.optIn({global:{enabled:this.telemetryService.isOptedIn}});const s=null==n?void 0:n.banner;this.maybeStartTelemetryPoller(),s&&(this.maybeShowOptedInNotificationBanner(),this.maybeShowOptInBanner())})),{telemetryService:this.getTelemetryServicePublicApis(),telemetryNotifications:{setOptedInNoticeSeen:()=>a.setOptedInNoticeSeen()},telemetryConstants:o}}stop(){var e;null===(e=this.telemetrySender)||void 0===e||e.stop()}getTelemetryServicePublicApis(){const e=this.telemetryService;return{getIsOptedIn:()=>e.getIsOptedIn(),setOptIn:t=>e.setOptIn(t),canSendTelemetry:()=>e.canSendTelemetry(),userCanChangeSettings:e.userCanChangeSettings,getCanChangeOptInStatus:()=>e.getCanChangeOptInStatus(),fetchExample:()=>e.fetchExample()}}async refreshConfig(e){const t=await this.fetchUpdatedConfig(e);return this.telemetryService&&(this.telemetryService.config=t),t}getCanUserChangeSettings(e){var t,n,s;return null===(t=null===(n=e.capabilities)||void 0===n||null===(s=n.savedObjectsManagement)||void 0===s?void 0:s.edit)||void 0===t||t}getIsUnauthenticated(e){const{anonymousPaths:t}=e;return t.isAnonymous(window.location.pathname)}maybeStartTelemetryPoller(){this.telemetrySender&&this.telemetrySender.startChecking()}maybeShowOptedInNotificationBanner(){this.telemetryNotifications&&this.telemetryNotifications.shouldShowOptedInNoticeBanner()&&this.telemetryNotifications.renderOptedInNoticeBanner()}maybeShowOptInBanner(){this.telemetryNotifications&&this.telemetryNotifications.shouldShowOptInBanner()&&this.telemetryNotifications.renderOptInBanner()}async fetchUpdatedConfig(e){const{allowChangingOptInStatus:t,optIn:n,sendUsageFrom:s,telemetryNotifyUserAboutOptInDefault:i}=await e.get("/api/telemetry/v2/config");return{...this.config,allowChangingOptInStatus:t,optIn:n,sendUsageFrom:s,telemetryNotifyUserAboutOptInDefault:i,userCanChangeSettings:this.canUserChangeSettings}}}function C(e){return new plugin_TelemetryPlugin(e)}},function(e,t){e.exports=__kbnSharedDeps__.KbnI18nReact}]);