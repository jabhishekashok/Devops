(window.unifiedSearch_bundle_jsonpfunction=window.unifiedSearch_bundle_jsonpfunction||[]).push([[16],{159:function(e,t,r){"use strict";r.r(t),r.d(t,"setupGetFieldSuggestions",(function(){return i})),r.d(t,"setupGetValueSuggestions",(function(){return u})),r.d(t,"setupGetOperatorSuggestions",(function(){return T})),r.d(t,"setupGetConjunctionSuggestions",(function(){return k}));var a=r(21),s=r(4),n=r(22);const o=(e,t)=>{const r=["raw","keyword"];return r.map((t=>`${e.name}.${t}`)).includes(t.name)?1:r.map((e=>`${t.name}.${e}`)).includes(e.name)?-1:e.name.localeCompare(t.name)},i=e=>async({indexPatterns:e},{start:t,end:i,prefix:u,suffix:l,nestedPath:c=""})=>{const p=Object(s.flatten)(e.map((e=>e.fields.filter(a.indexPatterns.isFilterable)))),d=`${u}${l}`.trim().toLowerCase(),m=function(e,t,r){if(!t)return e;const a=(""+t).toLowerCase(),n=Object(s.partition)(e,(e=>(""+(r?e[r]:e)).toLowerCase().startsWith(a)));return[...n[0],...n[1]]}(p.filter((e=>{const t=a.indexPatterns.getFieldSubtypeNested(e);return(!c||c&&(null==t?void 0:t.nested.path.includes(c)))&&e.name.toLowerCase().includes(d)})).sort(o),d,"name"),{escapeKuery:g}=await Promise.resolve().then(r.t.bind(null,37,7)),h=m.map((e=>{const r=e.subType&&e.subType.nested?e.subType.nested.path.slice(c?c.length+1:0):"",a=e.subType&&e.subType.nested&&r.length>0?`${g(r)}:{ ${g(e.name.slice(e.subType.nested.path.length+1))}  }`:`${g(e.name.slice(c?c.length+1:0))} `,s=e.subType&&e.subType.nested&&r.length>0?a.length-2:a.length;return{type:n.a.Field,text:a,start:t,end:i,cursorIndex:s,field:e}}));return Promise.resolve(h)},u=e=>{const t=e.getStartServices().then((([e,t,r])=>r.autocomplete));return async({indexPatterns:e,boolFilter:r,useTimeRange:a,signal:o,method:i},{start:u,end:l,prefix:c,suffix:p,fieldName:d,nestedPath:m})=>{const g=m?`${m}.${d}`:d,h=[];e.forEach((e=>{e.fields.filter((e=>e.name===g)).forEach((t=>h.push([e,t])))}));const f=`${c}${p}`.trim(),{getValueSuggestions:O}=await t,x=await Promise.all(h.map((([e,t])=>O({indexPattern:e,field:t,query:f,boolFilter:r,useTimeRange:a,signal:o,method:i}).then((e=>{const t=e.map((e=>{return"string"==typeof e?`"${t=e,t.replace(/[\\"]/g,"\\$&")}"`:`${e}`;var t}));return((e,t,r,a)=>a.filter((e=>e.toLowerCase().includes(r.toLowerCase()))).map((r=>({type:n.a.Value,text:`${r} `,start:e,end:t}))))(u,l,f,t)})))));return Object(s.flatten)(x)}};r(0);var l=r(38),c=r(1);const p=Object(c.jsx)(l.FormattedMessage,{id:"unifiedSearch.kueryAutocomplete.equalOperatorDescription.equalsText",defaultMessage:"equals",description:"Part of unifiedSearch.kueryAutocomplete.equalOperatorDescription. Full text: 'equals some value'"}),d=Object(c.jsx)(l.FormattedMessage,{id:"unifiedSearch.kueryAutocomplete.lessThanOrEqualOperatorDescription.lessThanOrEqualToText",defaultMessage:"less than or equal to",description:"Part of unifiedSearch.kueryAutocomplete.lessThanOrEqualOperatorDescription. Full text: 'is less than or equal to some value'"}),m=Object(c.jsx)(l.FormattedMessage,{id:"unifiedSearch.kueryAutocomplete.greaterThanOrEqualOperatorDescription.greaterThanOrEqualToText",defaultMessage:"greater than or equal to",description:"Part of unifiedSearch.kueryAutocomplete.greaterThanOrEqualOperatorDescription. Full text: 'is greater than or equal to some value'"}),g=Object(c.jsx)(l.FormattedMessage,{id:"unifiedSearch.kueryAutocomplete.lessThanOperatorDescription.lessThanText",defaultMessage:"less than",description:"Part of unifiedSearch.kueryAutocomplete.lessThanOperatorDescription. Full text: 'is less than some value'"}),h=Object(c.jsx)(l.FormattedMessage,{id:"unifiedSearch.kueryAutocomplete.greaterThanOperatorDescription.greaterThanText",defaultMessage:"greater than",description:"Part of unifiedSearch.kueryAutocomplete.greaterThanOperatorDescription. Full text: 'is greater than some value'"}),f=Object(c.jsx)(l.FormattedMessage,{id:"unifiedSearch.kueryAutocomplete.existOperatorDescription.existsText",defaultMessage:"exists",description:"Part of unifiedSearch.kueryAutocomplete.existOperatorDescription. Full text: 'exists in any form'"}),O={":":{description:Object(c.jsx)(l.FormattedMessage,{id:"unifiedSearch.kueryAutocomplete.equalOperatorDescription",defaultMessage:"{equals} some value",values:{equals:Object(c.jsx)("span",{className:"kbnSuggestionItem__callout"},p)},description:"Full text: 'equals some value'. See 'unifiedSearch.kueryAutocomplete.equalOperatorDescription.equalsText' for 'equals' part."}),fieldTypes:["string","number","number_range","date","date_range","ip","ip_range","geo_point","geo_shape","boolean"]},"<=":{description:Object(c.jsx)(l.FormattedMessage,{id:"unifiedSearch.kueryAutocomplete.lessThanOrEqualOperatorDescription",defaultMessage:"is {lessThanOrEqualTo} some value",values:{lessThanOrEqualTo:Object(c.jsx)("span",{className:"kbnSuggestionItem__callout"},d)},description:"Full text: 'is less than or equal to some value'. See 'unifiedSearch.kueryAutocomplete.lessThanOrEqualOperatorDescription.lessThanOrEqualToText' for 'less than or equal to' part."}),fieldTypes:["number","number_range","date","date_range","ip","ip_range"]},">=":{description:Object(c.jsx)(l.FormattedMessage,{id:"unifiedSearch.kueryAutocomplete.greaterThanOrEqualOperatorDescription",defaultMessage:"is {greaterThanOrEqualTo} some value",values:{greaterThanOrEqualTo:Object(c.jsx)("span",{className:"kbnSuggestionItem__callout"},m)},description:"Full text: 'is greater than or equal to some value'. See 'unifiedSearch.kueryAutocomplete.greaterThanOrEqualOperatorDescription.greaterThanOrEqualToText' for 'greater than or equal to' part."}),fieldTypes:["number","number_range","date","date_range","ip","ip_range"]},"<":{description:Object(c.jsx)(l.FormattedMessage,{id:"unifiedSearch.kueryAutocomplete.lessThanOperatorDescription",defaultMessage:"is {lessThan} some value",values:{lessThan:Object(c.jsx)("span",{className:"kbnSuggestionItem__callout"},g)},description:"Full text: 'is less than some value'. See 'unifiedSearch.kueryAutocomplete.lessThanOperatorDescription.lessThanText' for 'less than' part."}),fieldTypes:["number","number_range","date","date_range","ip","ip_range"]},">":{description:Object(c.jsx)(l.FormattedMessage,{id:"unifiedSearch.kueryAutocomplete.greaterThanOperatorDescription",defaultMessage:"is {greaterThan} some value",values:{greaterThan:Object(c.jsx)("span",{className:"kbnSuggestionItem__callout"},h)},description:"Full text: 'is greater than some value'. See 'unifiedSearch.kueryAutocomplete.greaterThanOperatorDescription.greaterThanText' for 'greater than' part."}),fieldTypes:["number","number_range","date","date_range","ip","ip_range"]},": *":{description:Object(c.jsx)(l.FormattedMessage,{id:"unifiedSearch.kueryAutocomplete.existOperatorDescription",defaultMessage:"{exists} in any form",values:{exists:Object(c.jsx)("span",{className:"kbnSuggestionItem__callout"},f)},description:"Full text: 'exists in any form'. See 'unifiedSearch.kueryAutocomplete.existOperatorDescription.existsText' for 'exists' part."}),fieldTypes:void 0}},x=e=>O[e],b=e=>Object(c.jsx)("p",null,x(e).description),T=()=>({indexPatterns:e},{end:t,fieldName:r,nestedPath:a})=>{const o=Object(s.flatten)(e.map((e=>e.fields.slice()))),i=a?`${a}.${r}`:r,u=o.filter((e=>e.name===i)).map((e=>Object.keys(O).filter((t=>{const{fieldTypes:r}=x(t);return!r||r.includes(e.type)})).map((e=>({type:n.a.Operator,text:e+" ",description:b(e),start:t,end:t})))));return Promise.resolve(Object(s.flatten)(u))},j=Object(c.jsx)(l.FormattedMessage,{id:"unifiedSearch.kueryAutocomplete.andOperatorDescription.bothArgumentsText",defaultMessage:"both arguments",description:"Part of unifiedSearch.kueryAutocomplete.andOperatorDescription. Full text: 'Requires both arguments to be true'"}),y=Object(c.jsx)(l.FormattedMessage,{id:"unifiedSearch.kueryAutocomplete.orOperatorDescription.oneOrMoreArgumentsText",defaultMessage:"one or more arguments",description:"Part of unifiedSearch.kueryAutocomplete.orOperatorDescription. Full text: 'Requires one or more arguments to be true'"}),S={and:Object(c.jsx)("p",null,Object(c.jsx)(l.FormattedMessage,{id:"unifiedSearch.kueryAutocomplete.andOperatorDescription",defaultMessage:"Requires {bothArguments} to be true",values:{bothArguments:Object(c.jsx)("span",{className:"kbnSuggestionItem__callout"},j)},description:"Full text: ' Requires both arguments to be true'. See 'unifiedSearch.kueryAutocomplete.andOperatorDescription.bothArgumentsText' for 'both arguments' part."})),or:Object(c.jsx)("p",null,Object(c.jsx)(l.FormattedMessage,{id:"unifiedSearch.kueryAutocomplete.orOperatorDescription",defaultMessage:"Requires {oneOrMoreArguments} to be true",values:{oneOrMoreArguments:Object(c.jsx)("span",{className:"kbnSuggestionItem__callout"},y)},description:"Full text: 'Requires one or more arguments to be true'. See 'unifiedSearch.kueryAutocomplete.orOperatorDescription.oneOrMoreArgumentsText' for 'one or more arguments' part."}))},k=e=>(e,{text:t,end:r})=>{let a=[];return t.endsWith(" ")&&(a=Object.keys(S).map((e=>({type:n.a.Conjunction,text:`${e} `,description:S[e],start:r,end:r})))),Promise.resolve(a)}}}]);